{"version":3,"sources":["webpack:///js/4.ff500297eba83d0e81ed.js","webpack:///./src/views/charts/line.vue","webpack:///./~/zrender/lib/core/util.js?10f4***","webpack:///./~/echarts/lib/echarts.js?68a2***","webpack:///./~/echarts/lib/util/graphic.js?e267***","webpack:///./~/echarts/lib/util/number.js?43e3***","webpack:///./~/zrender/lib/core/vector.js?6654***","webpack:///./~/zrender/lib/graphic/Path.js?c119***","webpack:///./~/zrender/lib/core/env.js?9ccc***","webpack:///./~/echarts/lib/util/format.js?7f72***","webpack:///./~/echarts/lib/util/model.js?e2bd***","webpack:///./~/zrender/lib/core/BoundingRect.js?76f6***","webpack:///./~/echarts/lib/model/Model.js?f4df***","webpack:///./~/echarts/lib/util/clazz.js?3e66***","webpack:///./~/echarts/lib/model/Component.js?0e02***","webpack:///./~/echarts/lib/util/layout.js?2b1e***","webpack:///./~/zrender/lib/core/curve.js?9511***","webpack:///./~/zrender/lib/tool/color.js?284f***","webpack:///./~/zrender/lib/mixin/Eventful.js?223b***","webpack:///./~/zrender/lib/contain/text.js?3a43***","webpack:///./~/zrender/lib/core/event.js?24ff***","webpack:///./~/echarts/lib/scale/Scale.js?c922***","webpack:///./~/zrender/lib/config.js?2861***","webpack:///./~/zrender/lib/container/Group.js?8d57***","webpack:///./~/zrender/lib/core/PathProxy.js?69e9***","webpack:///./~/zrender/lib/core/matrix.js?97a2***","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js?e2b1***","webpack:///./~/echarts/lib/CoordinateSystem.js?2b30***","webpack:///./~/echarts/lib/coord/axisHelper.js?4730***","webpack:///./~/echarts/lib/scale/Interval.js?08e9***","webpack:///./~/echarts/lib/util/component.js?cc72***","webpack:///./~/zrender/lib/core/timsort.js?0a74***","webpack:///./~/zrender/lib/graphic/Displayable.js?5c45***","webpack:///./~/zrender/lib/graphic/Gradient.js?5165***","webpack:///./~/echarts/lib/model/Series.js?186c***","webpack:///./~/echarts/lib/data/List.js?b096***","webpack:///./~/echarts/lib/chart/helper/Symbol.js?9fa3***","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js?0573***","webpack:///./~/echarts/lib/model/mixin/colorPalette.js?b454***","webpack:///./~/echarts/lib/util/symbol.js?be2c***","webpack:///./~/echarts/lib/view/Chart.js?72f3***","webpack:///./~/zrender/lib/Element.js?325b***","webpack:///./~/zrender/lib/animation/Animator.js?d2b9***","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js?6d88***","webpack:///./~/zrender/lib/contain/util.js?0031***","webpack:///./~/zrender/lib/core/LRU.js?018e***","webpack:///./~/zrender/lib/core/guid.js?f0e4***","webpack:///./~/zrender/lib/core/log.js?26a2***","webpack:///./~/zrender/lib/graphic/Image.js?bf1b***","webpack:///./~/zrender/lib/graphic/Pattern.js?a97e***","webpack:///./~/zrender/lib/graphic/Style.js?22d9***","webpack:///./~/zrender/lib/graphic/helper/poly.js?788c***","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js?e3fc***","webpack:///./~/echarts/lib/component/grid.js?5897***","webpack:///./~/echarts/lib/coord/cartesian/Grid.js?f167***","webpack:///./~/echarts/lib/util/throttle.js?56b3***","webpack:///./~/zrender/lib/graphic/LinearGradient.js?4250***","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js?6b79***","webpack:///./~/echarts/lib/component/tooltip.js?b491***","webpack:///./~/echarts/lib/view/Component.js?415a***","webpack:///./~/echarts/lib/ExtensionAPI.js?e283***","webpack:///./~/echarts/lib/chart/line.js?f251***","webpack:///./~/echarts/lib/chart/line/LineSeries.js?6f66***","webpack:///./~/echarts/lib/chart/line/LineView.js?018e***","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js?8da6***","webpack:///./~/echarts/lib/chart/line/poly.js?c760***","webpack:///./~/echarts/lib/component/axis.js?8a87***","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js?6417***","webpack:///./~/echarts/lib/component/axis/AxisView.js?f854***","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js?2c54***","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js?19ac***","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js?ae52***","webpack:///./~/echarts/lib/coord/Axis.js?736c***","webpack:///./~/echarts/lib/coord/axisDefault.js?4492***","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js?a8d0***","webpack:///./~/echarts/lib/coord/axisModelCreator.js?34e4***","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js?9345***","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js?9246***","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js?103b***","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js?1817***","webpack:///./~/echarts/lib/coord/cartesian/axisLabelInterval.js?b017***","webpack:///./~/echarts/lib/data/DataDiffer.js?f330***","webpack:///./~/echarts/lib/data/helper/completeDimensions.js?9c9e***","webpack:///./~/echarts/lib/layout/points.js?4302***","webpack:///./~/echarts/lib/loading/default.js?8a5f***","webpack:///./~/echarts/lib/model/Global.js?b9d3***","webpack:///./~/echarts/lib/model/OptionManager.js?a7a5***","webpack:///./~/echarts/lib/model/globalDefault.js?fd54***","webpack:///./~/echarts/lib/model/mixin/areaStyle.js?4e41***","webpack:///./~/echarts/lib/model/mixin/boxLayout.js?92d7***","webpack:///./~/echarts/lib/model/mixin/itemStyle.js?9011***","webpack:///./~/echarts/lib/model/mixin/lineStyle.js?3579***","webpack:///./~/echarts/lib/model/mixin/textStyle.js?e4c8***","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js?f171***","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js?aff6***","webpack:///./~/echarts/lib/processor/dataSample.js?6fcd***","webpack:///./~/echarts/lib/scale/Log.js?0ad0***","webpack:///./~/echarts/lib/scale/Ordinal.js?3a6b***","webpack:///./~/echarts/lib/scale/Time.js?6fdf***","webpack:///./~/echarts/lib/visual/seriesColor.js?4b6a***","webpack:///./~/echarts/lib/visual/symbol.js?518b***","webpack:///./~/zrender/lib/Handler.js?fbeb***","webpack:///./~/zrender/lib/Layer.js?f586***","webpack:///./~/zrender/lib/Painter.js?ee99***","webpack:///./~/zrender/lib/Storage.js?7e93***","webpack:///./~/zrender/lib/animation/Animation.js?8743***","webpack:///./~/zrender/lib/animation/Clip.js?fef9***","webpack:///./~/zrender/lib/animation/easing.js?64b6***","webpack:///./~/zrender/lib/contain/arc.js?7367***","webpack:///./~/zrender/lib/contain/cubic.js?b90e***","webpack:///./~/zrender/lib/contain/line.js?4326***","webpack:///./~/zrender/lib/contain/path.js?2e7f***","webpack:///./~/zrender/lib/contain/quadratic.js?f589***","webpack:///./~/zrender/lib/contain/windingLine.js?625a***","webpack:///./~/zrender/lib/core/GestureMgr.js?00fd***","webpack:///./~/zrender/lib/core/bbox.js?1b56***","webpack:///./~/zrender/lib/dom/HandlerProxy.js?2fc7***","webpack:///./~/zrender/lib/graphic/CompoundPath.js?8636***","webpack:///./~/zrender/lib/graphic/RadialGradient.js?895e***","webpack:///./~/zrender/lib/graphic/Text.js?3244***","webpack:///./~/zrender/lib/graphic/helper/roundRect.js?418d***","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js?2713***","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js?a17c***","webpack:///./~/zrender/lib/graphic/mixin/RectText.js?94ea***","webpack:///./~/zrender/lib/graphic/shape/Arc.js?2994***","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js?f5c4***","webpack:///./~/zrender/lib/graphic/shape/Circle.js?076e***","webpack:///./~/zrender/lib/graphic/shape/Line.js?7728***","webpack:///./~/zrender/lib/graphic/shape/Polygon.js?d37d***","webpack:///./~/zrender/lib/graphic/shape/Polyline.js?3cdb***","webpack:///./~/zrender/lib/graphic/shape/Rect.js?3b3d***","webpack:///./~/zrender/lib/graphic/shape/Ring.js?b71c***","webpack:///./~/zrender/lib/graphic/shape/Sector.js?9767***","webpack:///./~/zrender/lib/mixin/Animatable.js?35cb***","webpack:///./~/zrender/lib/mixin/Draggable.js?fbca***","webpack:///./~/zrender/lib/mixin/Transformable.js?f61b***","webpack:///./~/zrender/lib/tool/path.js?dc4b***","webpack:///./~/zrender/lib/tool/transformPath.js?ddb2***","webpack:///./~/zrender/lib/zrender.js?5dcd***","webpack:///./~/echarts/lib/component/title.js?e263**","webpack:///./~/echarts/lib/component/helper/listComponent.js?566d","webpack:///./~/echarts/lib/component/legend.js?d893","webpack:///./~/echarts/lib/component/legend/LegendModel.js?bbe7","webpack:///./~/echarts/lib/component/legend/LegendView.js?124f","webpack:///./~/echarts/lib/component/legend/legendAction.js?b7a9","webpack:///./~/echarts/lib/component/legend/legendFilter.js?93b2","webpack:///lineMarker.vue","webpack:///line.vue?e758","webpack:///./src/views/charts/line.vue?d890","webpack:///./src/views/charts/line.vue?c72e","webpack:///./src/components/Charts/lineMarker.vue","webpack:///./src/views/charts/line.vue?eacc","webpack:///./src/components/Charts/lineMarker.vue?d78d"],"names":["webpackJsonp","289","module","exports","__webpack_require__","injectStyle","ssrContext","Component","315","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","createCanvas","document","createElement","getContext","_ctx","util","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","slice","Function","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","createHashMap","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","get","set","prefixedKey","removeKey","noop","316","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","opts","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","init","renderer","devicePixelRatio","width","height","_throttledZrFlush","throttle","zrUtil","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","query","eachComponent","model","index","view","__viewId","__alive","doDispatchAction","silent","payloadType","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","__model","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","Math","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","painter","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","max","left","Infinity","top","right","bottom","canvasList","dpr","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","style","x","y","image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","colorStops","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","name","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","number","format","matrix","vector","color","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","317","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","stroke","fill","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","__zr","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","round","Path","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","pathData","extendFromString","makePath","rect","layout","path","createFromString","getBoundingRect","aspect","cx","cy","resizePath","mergePath","applyTransform","pathRect","m","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","shape","lineWidth","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","mul","getLocalTransform","parent","vertex","transform","invert","transformDirection","direction","hBase","abs","vBase","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","318","_trim","str","linearMap","val","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","match","parseFloat","NaN","precision","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","parseDate","ret","quantity","pow","nice","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","v","319","ArrayCtor","Float32Array","out","copy","v1","v2","scaleAndAdd","sqrt","lenSquare","div","dot","scale","s","normalize","d","distance","distanceSquare","negate","lerp","t","lengthSquare","dist","distSquare","320","Displayable","PathProxy","pathContain","Pattern","getCanvasPattern","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","hasStroke","hasFill","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","setTransform","__dirty","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","w","lineScale","strokeNoScale","getLineScale","contain","localPos","transformCoordToLocal","containStroke","dirty","dirtyPath","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","321","navigator","os","ua","firefox","ie","edge","touchEventsSupported","pointerEventsSupported","userAgent","322","numberUtil","textContain","formatUtil","addCommas","toCamelCase","upperCaseFirst","group1","charAt","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","encode","seriesLen","$vars","alias","k","s2d","formatTime","date","getFullYear","M","getMonth","getDate","h","getHours","getMinutes","getSeconds","capitalFirst","substr","truncateText","323","has","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","queryComponents","324","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","325","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","Ctor","setReadOnly","properties","customizeGetParent","enableClassExtend","326","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","options","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","327","getDependencies","deps","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","328","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","dx","dy","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hasValue","hNames","vNames","hResult","vResult","copyLayoutParams","329","isAroundZero","EPSILON","isNotAroundZero","cubicAt","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","A","B","C","n","t1","disc","K","t2","discSqrt","mathSqrt","Y1","Y2","mathPow","ONE_THIRD","T","theta","acos","ASqrt","tmp","cos","THREE_SQRT","sin","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","x0","y0","x3","y3","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","v2Create","330","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseInt","parseCssFloat","cssHueToRgb","m1","m2","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","l","rgba2hsla","H","S","R","G","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","331","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","332","getTextWidth","textWidthCache","textLines","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textAlign","textBaseline","textLineLen","lineHeight","adjustTextPositionOnRect","textRect","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","join","charCode","charCodeAt","font","333","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","stop","preventDefault","stopPropagation","cancelBubble","returnValue","Dispatcher","334","Scale","_extent","_interval","scaleProto","extent","unionExtent","unionExtentFromData","dim","getDataExtent","getExtent","setExtent","start","end","thisExtent","getTicksLabels","labels","ticks","getTicks","getLabel","335","config","debugMode","336","Element","_children","__storage","children","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","includeChildren","tmpRect","tmpMat","invisible","childRect","337","curve","bbox","CMD","Q","Z","min2","max2","mathCos","mathSin","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","dTheta","psi","fs","scaleX","scaleY","isEllipse","rotate","338","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","339","excludes","propName","340","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","341","OrdinalScale","IntervalScale","axisHelper","getScaleExtent","axis","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","tick","342","mathFloor","mathCeil","roundingErrorFix","niceTicks","_niceExtent","reverse","expandSize","343","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","callback","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","344","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","mid","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","345","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","346","Gradient","addColorStop","347","classUtil","colorPaletteMixin","legendDataProvider","visualColorAccessPath","getInitialData","label","fillDataTextStyle","newSeriesOption","cloneShallow","getLinkedData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formattedValue","valStr","getDimensionInfo","colorEl","animationEnabled","getColorFromPalette","scope","getAxisTooltipDataIndex","getTooltipPosition","349","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","hostModel","transferProperties","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","indexOfNearest","maxDistance","nearestIdx","minDist","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","350","getSymbolSize","symbolSize","getScale","Symbol","seriesScope","updateData","driftSymbol","drift","symbolUtil","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","highlight","downplay","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","getItemStyle","elStyle","setColor","opacity","valueDim","onEmphasis","ratio","onNormal","fadeOut","351","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","getCoordSysModel","gridIndex","gridId","extraOption","352","colorIdx","colorNameMap","colorPalette","353","Triangle","Diamond","Pin","angle","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","line","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","textVerticalAlign","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","354","Chart","elSetState","state","toggleHighlight","dataIdx","chartProto","355","guid","Transformable","Animatable","clipPath","decomposeTransform","beforeUpdate","afterUpdate","updateTransform","hide","show","setClipPath","addSelfToZr","removeClipPath","removeSelfFromZr","animators","addAnimator","removeAnimator","356","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","createTrackClip","animator","easing","oneTrackDone","keyframes","getter","_getter","setter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","_target","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","delay","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","357","requestAnimationFrame","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","setTimeout","358","PI2","normalizeRadian","359","LinkedList","head","tail","linkedListProto","insert","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","removed","leastUsedEntry","360","idStart","361","362","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","drawImage","363","repeat","createPattern","364","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","shadowBlur","shadowOffsetX","shadowOffsetY","textStroke","textShadowBlur","textShadowOffsetX","textShadowOffsetY","textTransform","textRotation","blend","prevStyle","firstDraw","styleName","globalAlpha","globalCompositeOperation","otherStyle","newStyle","canvasGradient","styleProto","365","smoothSpline","smoothBezier","points","smooth","controlPoints","smoothConstraint","cp1","cp2","366","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","axesInfo","completeDimensions","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxis","singleAxisModel","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","367","gridModel","getRect","xAxis","yAxis","grid","368","isAxisUsedInTheGrid","axisModel","getLabelUnionRect","labelCount","isLabelIgnored","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtent","axisExtentSum","toGlobalCoord","toLocalCoord","findAxesModels","axesTypes","isCartesian2D","Cartesian2D","Axis2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","onZero","adjustAxes","axesList","isHorizontal","gridRect","inverse","getBoxLayoutParams","labelUnionRect","getAxis","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","_findConvertTarget","cartesian","dataToPoint","dataToCoord","pointToData","coordToData","coordsList","point","createAxisCreator","axisPosition","axisPositionUsed","onBand","axesCount","addAxis","grids","369","lib","ORIGIN_METHOD","RATE","fn","debounce","exec","lastExec","getTime","timer","currCall","lastCall","clearTimeout","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","371","globalCoord","373","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","oldData","_data","SymbolCtor","newIdx","symbolEl","oldIdx","execute","enableAnimation","374","375","componentProto","376","chartInstance","echartsAPIList","377","378","legendHoverLink","clipOverflow","lineStyle","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","379","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","halfBandWidth","getBandWidth","dir","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","baseDataOffset","stackedOnSameSign","stackedData","createGridClipShape","hasAnimation","xExtent","yExtent","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","angleExtent","RADIAN","r0","clockwise","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","stopLen","outerColors","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","polyHelper","lineGroup","symbolDraw","_symbolDraw","_lineGroup","lineStyleModel","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","getLineStyle","lineJoin","stackedOnSmooth","getAreaStyle","categoryAxis","getAxesByScale","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","380","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","381","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","cp0","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","vec2Min","vec2Max","getBoundingBox","ptMin","ptMax","stackedOnBBox","382","383","makeAxisEventDataBase","innerTextLayout","verticalAlign","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","AxisBuilder","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","lineCap","axisTick","isBlank","tickModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelRotation","labelLayout","categoryData","textEls","triggerEvent","tickVal","itemTextStyleModel","textColor","pos","labelBeforeFormat","textEl","targetType","firstLabel","lastLabel","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","rawTick","384","layoutAxis","getZero","theAxis","rawAxisPosition","rectBound","axisOffset","posMap","dirMap","getLabelInterval","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","splitLineModel","lineColors","lineInterval","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","385","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","cssText","fontSize","assembleCssText","tooltipModel","transitionDuration","padding","zrColor","borderName","camelCase","TooltipContent","_x","_y","appendChild","_container","_show","_hideTimeout","onmouseenter","enterable","_inContent","onmousemove","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","display","innerHTML","setContent","isShow","386","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","borderColor","borderRadius","borderWidth","extraCssText","axisPointer","animationDurationUpdate","animationEasingUpdate","crossStyle","shadowStyle","387","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","viewWidth","viewHeight","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","_axisPointers","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","findHover","manuallyHideTip","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","targetShape","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","movePolarLine","mouseCoord","pointToCoord","coordToPoint","movePolarShadow","crossStyleModel","pointerModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","rootTooltipModel","baseDimIndex","sampleSeriesIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","html","ticket","cbTicket","388","fixExtentWithBands","nTick","normalizedExtent","Axis","containData","alignWithLabel","bands","getBands","coords","getLabelsCoords","_isBlank","389","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitLine","splitArea","timeAxis","logAxis","logBase","390","rangeStart","rangeEnd","setRange","391","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","392","axisLabelInterval","coordExtent","_labelInterval","393","dimAxisMapper","_axes","Cartesian","_dimList","getAxes","_dataCoordConvert","input","dimList","output","394","axisX","axisY","dataToPoints","395","containLabel","396","397","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","398","defaultNames","extraPrefix","value0","retrieveValue","guessOrdinal","399","eachSeriesByType","400","maskColor","mask","labelRect","401","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","seriesModels","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","getComponent","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","getSeriesByName","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","402","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","403","platform","fontFamily","fontStyle","fontWeight","animationDuration","animationThreshold","progressiveThreshold","404","405","406","getBorderLineDash","lineType","407","getLineDash","dotSize","dashSize","408","gTextStyleModel","409","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","410","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","411","samplers","average","nearest","indexSampler","sampler","412","fixRoundingError","originalVal","intervalScaleProto","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","413","rank","414","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","415","encodeColor","colorAccessPath","416","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","417","makeEventPacket","eveType","targetInfo","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","displayable","SILENT","Draggable","handlerNames","Handler","proxy","painterRoot","_hovered","_lastTouchMoment","mousemove","lastHovered","hovered","hoveredTarget","lastHoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","eventArgs","setCursorStyle","cursorStyle","eventHandler","eventPacket","eachOtherLayer","layer","exclude","hoverCheckResult","_downel","_upel","418","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","save","fillRect","restore","419","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","Painter","root","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRoot","paintAll","_paintList","refreshHover","_startProgessive","__hoverMir","elMirror","__from","hoverElements","clearHover","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","token","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","insertBefore","firstChild","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","removeChild","clearLayer","imageLayer","displayList","whIdx","wh","cwh","plt","prb","pathToImage","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","420","shapeCompareFunc","Storage","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","addRoot","delRoot","_renderList","421","Animation","stage","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","422","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","arg","423","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","424","_l","atan2","425","426","_a","_b","427","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","428","429","430","pointPair","center","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","track","pinchEnd","pinchPre","pinchCenter","431","extremity","fromPoints","xDim","yDim","tx","ty","432","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","_touchTimer","isPointerFromTouch","initDomHandler","makeMouseHandler","touchHandlerNames","_handlers","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","eventTool","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","433","paths","_updatePathDirty","434","435","strokeText","fillText","436","r1","r2","r3","r4","total","437","v2Min","v2Max","v2Scale","v2Distance","v2Add","isLoop","constraint","prevPoint","nextPoint","cps","d0","438","interpolate","segs","w2","w3","439","maxValue","lastIndexOf","align","baseline","shadowColor","textShadowColor","440","unitX","unitY","441","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","curveTool","pointAt","tangentAt","442","443","444","445","446","roundRectHelper","447","448","shadowTemp","modified","449","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","450","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","451","mIdentity","transformableProto","parentHasTransform","tmpTransform","transformCoordToGlobal","452","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","RegExp","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","vMag","pathEls","pathList","pathEl","pathBundle","453","nPoint","mathAtan2","454","delInstance","HandlerProxy","useVML","painterCtors","ZRender","getInstance","registerPainter","rendererType","vml","handerProxy","_needsRefresh","oldDelFromStorage","oldAddToStorage","zLevel","_needsRefreshHover","refreshHoverImmediately","clearAnimation","462","subtext","subtarget","itemGap","subtextStyle","titleModel","subtextStyleModel","subText","subTextEl","link","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","499","positionGroup","addBackground","500","501","LegendModel","selected","_updateData","legendData","hasSelected","isSelected","select","availableNames","_availableNames","unSelect","toggleSelected","itemWidth","itemHeight","inactiveColor","selectedMode","502","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","legendSymbolType","_createItem","itemGroup","itemIcon","legendGlobalTooltipModel","textX","hitRect","legendIndex","503","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","504","legendModels","545","defineProperty","default","className","mounted","initChart","methods","getElementById","title","legend","icon","558","_lineMarker","_lineMarker2","__esModule","lineMarker","610","sources","mappings","file","sourcesContent","sourceRoot","668","locals","713","735","_vm","$createElement","_c","_self","staticClass","staticStyle","_v","attrs","staticRenderFns","767","class"],"mappings":"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+BV,KlJ09+BU2wE,ckJx9+BV,GlJ09+BQ7iB,QACEx/D,KkJz9+BV,WlJ09+BUm7C,akJz9+BV,ElJ09+BUw1B,UACEvK,WACEztD,MkJv9+Bd,YlJ09+BUta,MAAO,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QkJx9+B3G,WlJ09+BQohE,QACEz/D,KkJz9+BV,QlJ09+BUwU,KkJz9+BV,QlJ09+BUu8D,UACEre,MkJx9+BZ,GlJ09+BUie,UACEvK,WACEztD,MkJv9+Bd,YlJ09+BU64D,WACEv3C,OkJz9+BZ,GlJ09+BYpa,WACEg2D,SkJv9+Bd,KlJ09+BUsK,WACE/Z,WACEztD,MkJt9+Bd,clJ09+BQnN,SACEgJ,KkJz9+BV,KlJ09+BUxU,KkJz9+BV,OlJ09+BUs8D,QkJz9+BV,ElJ09+BUgK,OkJz9+BV,SlJ09+BUja,WkJz9+BV,ElJ09+BUka,YkJz9+BV,ElJ09+BUH,WACEr3C,QACE1qB,MkJv9+Bd,IlJ09+BUgxE,WACEtmD,QACEpW,MAAO,GAAI5C,GAAQjH,QAAQqO,eAAe,EAAG,EAAG,EAAG,IACjD45B,OkJz9+BhB,ElJ09+BgBp+B,MkJz9+BhB,4BlJ29+BgBo+B,OkJz9+BhB,GlJ09+BgBp+B,MkJz9+BhB,2BACA,GlJ09+BcguF,YkJz9+Bd,qBlJ09+Bc5rC,WkJv9+Bd,KlJ09+BU/M,WACEj/B,QACEpW,MkJz9+Bd,kBlJ09+Bc0/D,YkJz9+Bd,uBlJ09+BcE,YkJt9+Bd,KlJ09+BUl6E,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IkJz9+BnE,OlJ29+BUmW,KkJz9+BV,KlJ09+BUxU,KkJz9+BV,OlJ09+BUs8D,QkJz9+BV,ElJ09+BUgK,OkJz9+BV,SlJ09+BUja,WkJz9+BV,ElJ09+BUka,YkJz9+BV,ElJ09+BUH,WACEr3C,QACE1qB,MkJv9+Bd,IlJ09+BUgxE,WACEtmD,QACEpW,MAAO,GAAI5C,GAAQjH,QAAQqO,eAAe,EAAG,EAAG,EAAG,IACjD45B,OkJz9+BhB,ElJ09+BgBp+B,MkJz9+BhB,2BlJ29+BgB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","file":"js/4.ff500297eba83d0e81ed.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ 289:\n/***/ (function(module, exports, __webpack_require__) {\n\nfunction injectStyle (ssrContext) {\n  __webpack_require__(668)\n}\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(558),\n  /* template */\n  __webpack_require__(735),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-269020ec\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 315:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ }),\n\n/***/ 316:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(321);\n\n    var GlobalModel = __webpack_require__(401);\n    var ExtensionAPI = __webpack_require__(376);\n    var CoordinateSystemManager = __webpack_require__(340);\n    var OptionManager = __webpack_require__(402);\n\n    var ComponentModel = __webpack_require__(327);\n    var SeriesModel = __webpack_require__(347);\n\n    var ComponentView = __webpack_require__(375);\n    var ChartView = __webpack_require__(354);\n    var graphic = __webpack_require__(317);\n    var modelUtil = __webpack_require__(323);\n    var throttle = __webpack_require__(369);\n\n    var zrender = __webpack_require__(454);\n    var zrUtil = __webpack_require__(315);\n    var colorTool = __webpack_require__(330);\n    var Eventful = __webpack_require__(331);\n    var timsort = __webpack_require__(344);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(415));\n    echarts.registerPreprocessor(__webpack_require__(409));\n    echarts.registerLoading('default', __webpack_require__(400));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = __webpack_require__(349);\n    echarts.Model = __webpack_require__(325);\n\n    echarts.graphic = __webpack_require__(317);\n    echarts.number = __webpack_require__(318);\n    echarts.format = __webpack_require__(322);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(338);\n    echarts.vector = __webpack_require__(319);\n    echarts.color = __webpack_require__(330);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(62)))\n\n/***/ }),\n\n/***/ 317:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    var pathTool = __webpack_require__(452);\n    var round = Math.round;\n    var Path = __webpack_require__(320);\n    var colorTool = __webpack_require__(330);\n    var matrix = __webpack_require__(338);\n    var vector = __webpack_require__(319);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(336);\n\n    graphic.Image = __webpack_require__(362);\n\n    graphic.Text = __webpack_require__(435);\n\n    graphic.Circle = __webpack_require__(442);\n\n    graphic.Sector = __webpack_require__(448);\n\n    graphic.Ring = __webpack_require__(447);\n\n    graphic.Polygon = __webpack_require__(444);\n\n    graphic.Polyline = __webpack_require__(445);\n\n    graphic.Rect = __webpack_require__(446);\n\n    graphic.Line = __webpack_require__(443);\n\n    graphic.BezierCurve = __webpack_require__(441);\n\n    graphic.Arc = __webpack_require__(440);\n\n    graphic.CompoundPath = __webpack_require__(433);\n\n    graphic.LinearGradient = __webpack_require__(371);\n\n    graphic.RadialGradient = __webpack_require__(434);\n\n    graphic.BoundingRect = __webpack_require__(324);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n\n/***/ 318:\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n\n/***/ 319:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ }),\n\n/***/ 320:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(345);\n    var zrUtil = __webpack_require__(315);\n    var PathProxy = __webpack_require__(337);\n    var pathContain = __webpack_require__(427);\n\n    var Pattern = __webpack_require__(363);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ }),\n\n/***/ 321:\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n/***/ }),\n\n/***/ 322:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var numberUtil = __webpack_require__(318);\n    var textContain = __webpack_require__(332);\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n/***/ }),\n\n/***/ 323:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(322);\n    var nubmerUtil = __webpack_require__(318);\n    var Model = __webpack_require__(325);\n    var zrUtil = __webpack_require__(315);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n/***/ }),\n\n/***/ 324:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(319);\n    var matrix = __webpack_require__(338);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ }),\n\n/***/ 325:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(315);\n    var clazzUtil = __webpack_require__(326);\n    var env = __webpack_require__(321);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(407));\n    mixin(Model, __webpack_require__(404));\n    mixin(Model, __webpack_require__(408));\n    mixin(Model, __webpack_require__(406));\n\n    module.exports = Model;\n\n\n/***/ }),\n\n/***/ 326:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n\n/***/ 327:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(325);\n    var zrUtil = __webpack_require__(315);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(343);\n    var clazzUtil = __webpack_require__(326);\n    var layout = __webpack_require__(328);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(405));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n\n/***/ 328:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(315);\n    var BoundingRect = __webpack_require__(324);\n    var numberUtil = __webpack_require__(318);\n    var formatUtil = __webpack_require__(322);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n/***/ }),\n\n/***/ 329:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(319);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ }),\n\n/***/ 330:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = __webpack_require__(359);\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ }),\n\n/***/ 331:\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ }),\n\n/***/ 332:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(315);\n    var BoundingRect = __webpack_require__(324);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ }),\n\n/***/ 333:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(331);\n    var env = __webpack_require__(321);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ }),\n\n/***/ 334:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(326);\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n\n/***/ 335:\n/***/ (function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ }),\n\n/***/ 336:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(315);\n    var Element = __webpack_require__(355);\n    var BoundingRect = __webpack_require__(324);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ }),\n\n/***/ 337:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(329);\n    var vec2 = __webpack_require__(319);\n    var bbox = __webpack_require__(431);\n    var BoundingRect = __webpack_require__(324);\n    var dpr = __webpack_require__(335).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ }),\n\n/***/ 338:\n/***/ (function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ }),\n\n/***/ 339:\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(315);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n\n/***/ 340:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n\n/***/ 341:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(413);\n    var IntervalScale = __webpack_require__(342);\n    __webpack_require__(414);\n    __webpack_require__(412);\n    var Scale = __webpack_require__(334);\n\n    var numberUtil = __webpack_require__(318);\n    var zrUtil = __webpack_require__(315);\n    var textContain = __webpack_require__(332);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n\n/***/ 342:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(318);\n    var formatUtil = __webpack_require__(322);\n    var Scale = __webpack_require__(334);\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n\n/***/ 343:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var clazz = __webpack_require__(326);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n\n/***/ 344:\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ }),\n\n/***/ 345:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    var Style = __webpack_require__(364);\n\n    var Element = __webpack_require__(355);\n    var RectText = __webpack_require__(439);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ }),\n\n/***/ 346:\n/***/ (function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ }),\n\n/***/ 347:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var formatUtil = __webpack_require__(322);\n    var classUtil = __webpack_require__(326);\n    var modelUtil = __webpack_require__(323);\n    var ComponentModel = __webpack_require__(327);\n    var colorPaletteMixin = __webpack_require__(352);\n    var env = __webpack_require__(321);\n    var layout = __webpack_require__(328);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n\n/***/ 349:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(325);\n    var DataDiffer = __webpack_require__(397);\n\n    var zrUtil = __webpack_require__(315);\n    var modelUtil = __webpack_require__(323);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(62)))\n\n/***/ }),\n\n/***/ 350:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(315);\n    var symbolUtil = __webpack_require__(353);\n    var graphic = __webpack_require__(317);\n    var numberUtil = __webpack_require__(318);\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ }),\n\n/***/ 351:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var ComponentModel = __webpack_require__(327);\n    var zrUtil = __webpack_require__(315);\n    var axisModelCreator = __webpack_require__(391);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(390));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ }),\n\n/***/ 352:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(326);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 353:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(317);\n    var BoundingRect = __webpack_require__(324);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n\n/***/ 354:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(336);\n    var componentUtil = __webpack_require__(343);\n    var clazzUtil = __webpack_require__(326);\n    var modelUtil = __webpack_require__(323);\n    var zrUtil = __webpack_require__(315);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n\n/***/ 355:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(360);\n    var Eventful = __webpack_require__(331);\n    var Transformable = __webpack_require__(451);\n    var Animatable = __webpack_require__(449);\n    var zrUtil = __webpack_require__(315);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ }),\n\n/***/ 356:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(422);\n    var color = __webpack_require__(330);\n    var util = __webpack_require__(315);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ }),\n\n/***/ 357:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ }),\n\n/***/ 358:\n/***/ (function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 359:\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ }),\n\n/***/ 360:\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ }),\n\n/***/ 361:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(335);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ }),\n\n/***/ 362:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(345);\n    var BoundingRect = __webpack_require__(324);\n    var zrUtil = __webpack_require__(315);\n\n    var LRU = __webpack_require__(359);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ }),\n\n/***/ 363:\n/***/ (function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n/***/ }),\n\n/***/ 364:\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ }),\n\n/***/ 365:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(438);\n    var smoothBezier = __webpack_require__(437);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 366:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(349);\n    var completeDimensions = __webpack_require__(398);\n    var zrUtil = __webpack_require__(315);\n    var modelUtil = __webpack_require__(323);\n    var CoordinateSystem = __webpack_require__(340);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n\n/***/ 367:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(317);\n    var zrUtil = __webpack_require__(315);\n    var echarts = __webpack_require__(316);\n\n    __webpack_require__(368);\n\n    __webpack_require__(382);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ }),\n\n/***/ 368:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(328);\n    var axisHelper = __webpack_require__(341);\n\n    var zrUtil = __webpack_require__(315);\n    var Cartesian2D = __webpack_require__(394);\n    var Axis2D = __webpack_require__(392);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(395);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(340).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ }),\n\n/***/ 369:\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n\n/***/ 371:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    var Gradient = __webpack_require__(346);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ }),\n\n/***/ 373:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(317);\n    var Symbol = __webpack_require__(350);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ }),\n\n/***/ 374:\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(386);\n\n    __webpack_require__(387);\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(316).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(316).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n\n/***/ 375:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(336);\n    var componentUtil = __webpack_require__(343);\n    var clazzUtil = __webpack_require__(326);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n\n/***/ 376:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n\n/***/ 377:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var echarts = __webpack_require__(316);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(378);\n    __webpack_require__(379);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(416), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(399), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(411), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(367);\n\n\n/***/ }),\n\n/***/ 378:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var createListFromArray = __webpack_require__(366);\n    var SeriesModel = __webpack_require__(347);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ }),\n\n/***/ 379:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(315);\n    var SymbolDraw = __webpack_require__(373);\n    var Symbol = __webpack_require__(350);\n    var lineAnimationDiff = __webpack_require__(380);\n    var graphic = __webpack_require__(317);\n    var modelUtil = __webpack_require__(323);\n    var polyHelper = __webpack_require__(381);\n    var ChartView = __webpack_require__(354);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ }),\n\n/***/ 380:\n/***/ (function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ }),\n\n/***/ 381:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(320);\n    var vec2 = __webpack_require__(319);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ }),\n\n/***/ 382:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// TODO boundaryGap\n\n\n    __webpack_require__(351);\n\n    __webpack_require__(384);\n\n\n/***/ }),\n\n/***/ 383:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var formatUtil = __webpack_require__(322);\n    var graphic = __webpack_require__(317);\n    var Model = __webpack_require__(325);\n    var numberUtil = __webpack_require__(318);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(319);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n\n/***/ 384:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var graphic = __webpack_require__(317);\n    var AxisBuilder = __webpack_require__(383);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = __webpack_require__(316).extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n/***/ }),\n\n/***/ 385:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(315);\n    var zrColor = __webpack_require__(330);\n    var eventUtil = __webpack_require__(333);\n    var formatUtil = __webpack_require__(322);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(321);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n\n/***/ 386:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(316).extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n\n/***/ 387:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(385);\n    var graphic = __webpack_require__(317);\n    var zrUtil = __webpack_require__(315);\n    var formatUtil = __webpack_require__(322);\n    var numberUtil = __webpack_require__(318);\n    var modelUtil = __webpack_require__(323);\n    var parsePercent = numberUtil.parsePercent;\n    var env = __webpack_require__(321);\n    var Model = __webpack_require__(325);\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    __webpack_require__(316).extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 388:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(318);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(315);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n\n/***/ 389:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ }),\n\n/***/ 390:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var axisHelper = __webpack_require__(341);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 391:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(389);\n    var zrUtil = __webpack_require__(315);\n    var ComponentModel = __webpack_require__(327);\n    var layout = __webpack_require__(328);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ }),\n\n/***/ 392:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var Axis = __webpack_require__(388);\n    var axisLabelInterval = __webpack_require__(396);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ }),\n\n/***/ 393:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(315);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ }),\n\n/***/ 394:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var Cartesian = __webpack_require__(393);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ }),\n\n/***/ 395:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(351);\n    var ComponentModel = __webpack_require__(327);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ }),\n\n/***/ 396:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var axisHelper = __webpack_require__(341);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ }),\n\n/***/ 397:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n\n/***/ 398:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(315);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n\n/***/ 399:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 400:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(317);\n    var zrUtil = __webpack_require__(315);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n\n/***/ 401:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(315);\n    var modelUtil = __webpack_require__(323);\n    var Model = __webpack_require__(325);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(327);\n\n    var globalDefault = __webpack_require__(403);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(352));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n\n/***/ 402:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var modelUtil = __webpack_require__(323);\n    var ComponentModel = __webpack_require__(327);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n\n/***/ 403:\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n/***/ }),\n\n/***/ 404:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(339)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n\n/***/ 405:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n\n/***/ 406:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(339)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 407:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(339)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 408:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(332);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n\n/***/ 409:\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(315);\n    var compatStyle = __webpack_require__(410);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 410:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n\n/***/ 411:\n/***/ (function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ }),\n\n/***/ 412:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(315);\n    var Scale = __webpack_require__(334);\n    var numberUtil = __webpack_require__(318);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(342);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n\n/***/ 413:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(315);\n    var Scale = __webpack_require__(334);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n\n/***/ 414:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var numberUtil = __webpack_require__(318);\n    var formatUtil = __webpack_require__(322);\n\n    var IntervalScale = __webpack_require__(342);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n\n/***/ 415:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(346);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n\n/***/ 416:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n\n/***/ 417:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(315);\n    var Draggable = __webpack_require__(450);\n\n    var Eventful = __webpack_require__(331);\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ }),\n\n/***/ 418:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(315);\n    var config = __webpack_require__(335);\n    var Style = __webpack_require__(364);\n    var Pattern = __webpack_require__(363);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ }),\n\n/***/ 419:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(335);\n    var util = __webpack_require__(315);\n    var log = __webpack_require__(361);\n    var BoundingRect = __webpack_require__(324);\n    var timsort = __webpack_require__(344);\n\n    var Layer = __webpack_require__(418);\n\n    var requestAnimationFrame = __webpack_require__(357);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(362);\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ }),\n\n/***/ 420:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(315);\n    var env = __webpack_require__(321);\n\n    var Group = __webpack_require__(336);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(344);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ }),\n\n/***/ 421:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(315);\n    var Dispatcher = __webpack_require__(333).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(357);\n\n    var Animator = __webpack_require__(356);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ }),\n\n/***/ 422:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(423);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ }),\n\n/***/ 424:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(358).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 425:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(329);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 426:\n/***/ (function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 427:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var CMD = __webpack_require__(337).CMD;\n    var line = __webpack_require__(426);\n    var cubic = __webpack_require__(425);\n    var quadratic = __webpack_require__(428);\n    var arc = __webpack_require__(424);\n    var normalizeRadian = __webpack_require__(358).normalizeRadian;\n    var curve = __webpack_require__(329);\n\n    var windingLine = __webpack_require__(429);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 428:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(329);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 429:\n/***/ (function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ }),\n\n/***/ 430:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(333);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ }),\n\n/***/ 431:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(319);\n    var curve = __webpack_require__(329);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ }),\n\n/***/ 432:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(333);\n    var zrUtil = __webpack_require__(315);\n    var Eventful = __webpack_require__(331);\n    var env = __webpack_require__(321);\n    var GestureMgr = __webpack_require__(430);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ }),\n\n/***/ 433:\n/***/ (function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(320);\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 434:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(315);\n\n    var Gradient = __webpack_require__(346);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ }),\n\n/***/ 435:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(345);\n    var zrUtil = __webpack_require__(315);\n    var textContain = __webpack_require__(332);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ }),\n\n/***/ 436:\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 437:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(319);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(319);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ }),\n\n/***/ 439:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(332);\n    var BoundingRect = __webpack_require__(324);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ }),\n\n/***/ 440:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(320).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 441:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(329);\n    var vec2 = __webpack_require__(319);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(320).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 442:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(320).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 443:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(320).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 444:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(365);\n\n    module.exports = __webpack_require__(320).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 445:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(365);\n\n    module.exports = __webpack_require__(320).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 446:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(436);\n\n    module.exports = __webpack_require__(320).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 447:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(320).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 448:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = __webpack_require__(321);\n    var Path = __webpack_require__(320);\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ }),\n\n/***/ 449:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(356);\n    var util = __webpack_require__(315);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(361);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ }),\n\n/***/ 450:\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n/***/ }),\n\n/***/ 451:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(338);\n    var vector = __webpack_require__(319);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ }),\n\n/***/ 452:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(320);\n    var PathProxy = __webpack_require__(337);\n    var transformPath = __webpack_require__(453);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ }),\n\n/***/ 453:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(337).CMD;\n    var vec2 = __webpack_require__(319);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ }),\n\n/***/ 454:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(360);\n    var env = __webpack_require__(321);\n    var zrUtil = __webpack_require__(315);\n\n    var Handler = __webpack_require__(417);\n    var Storage = __webpack_require__(420);\n    var Animation = __webpack_require__(421);\n    var HandlerProxy = __webpack_require__(432);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(419)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ }),\n\n/***/ 462:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var echarts = __webpack_require__(316);\n    var graphic = __webpack_require__(317);\n    var layout = __webpack_require__(328);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(328);\n    var formatUtil = __webpack_require__(322);\n    var graphic = __webpack_require__(317);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n\n/***/ 500:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(501);\n    __webpack_require__(503);\n    __webpack_require__(502);\n\n    var echarts = __webpack_require__(316);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(504));\n\n\n/***/ }),\n\n/***/ 501:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var Model = __webpack_require__(325);\n\n    var LegendModel = __webpack_require__(316).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(315);\n    var symbolCreator = __webpack_require__(353);\n    var graphic = __webpack_require__(317);\n    var listComponentHelper = __webpack_require__(499);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(316).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ }),\n\n/***/ 503:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(316);\n    var zrUtil = __webpack_require__(315);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ }),\n\n/***/ 504:\n/***/ (function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ }),\n\n/***/ 545:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar echarts = __webpack_require__(316);\n\n__webpack_require__(377);\n\n__webpack_require__(374);\n__webpack_require__(462);\n__webpack_require__(500);\nexports.default = {\n  name: 'barPercent',\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    id: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '200px'\n    },\n    height: {\n      type: String,\n      default: '200px'\n    }\n  },\n  data: function data() {\n    return {};\n  },\n  mounted: function mounted() {\n    this.initChart();\n  },\n\n  methods: {\n    initChart: function initChart() {\n      this.chart = echarts.init(document.getElementById(this.id));\n\n      this.chart.setOption({\n        backgroundColor: '#394056',\n        title: {\n          text: '请求数',\n          textStyle: {\n            fontWeight: 'normal',\n            fontSize: 16,\n            color: '#F1F1F3'\n          },\n          left: '6%'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        },\n        legend: {\n          icon: 'rect',\n          itemWidth: 14,\n          itemHeight: 5,\n          itemGap: 13,\n          data: ['移动', '电信', '联通'],\n          right: '4%',\n          textStyle: {\n            fontSize: 12,\n            color: '#F1F1F3'\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '单位（%）',\n          axisTick: {\n            show: false\n          },\n          axisLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          },\n          axisLabel: {\n            margin: 10,\n            textStyle: {\n              fontSize: 14\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: '#57617B'\n            }\n          }\n        }],\n        series: [{\n          name: '移动',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(137, 189, 27, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(137, 189, 27, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(137,189,27)',\n              borderColor: 'rgba(137,189,2,0.27)',\n              borderWidth: 12\n\n            }\n          },\n          data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\n        }, {\n          name: '电信',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(0, 136, 212, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(0, 136, 212, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(0,136,212)',\n              borderColor: 'rgba(0,136,212,0.2)',\n              borderWidth: 12\n\n            }\n          },\n          data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n        }, {\n          name: '联通',\n          type: 'line',\n          smooth: true,\n          symbol: 'circle',\n          symbolSize: 5,\n          showSymbol: false,\n          lineStyle: {\n            normal: {\n              width: 1\n            }\n          },\n          areaStyle: {\n            normal: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: 'rgba(219, 50, 51, 0.3)'\n              }, {\n                offset: 0.8,\n                color: 'rgba(219, 50, 51, 0)'\n              }], false),\n              shadowColor: 'rgba(0, 0, 0, 0.1)',\n              shadowBlur: 10\n            }\n          },\n          itemStyle: {\n            normal: {\n              color: 'rgb(219,50,51)',\n              borderColor: 'rgba(219,50,51,0.2)',\n              borderWidth: 12\n            }\n          },\n          data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n        }]\n      });\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 558:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lineMarker = __webpack_require__(713);\n\nvar _lineMarker2 = _interopRequireDefault(_lineMarker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  components: { lineMarker: _lineMarker2.default }\n};\n\n/***/ }),\n\n/***/ 610:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(284)(true);\n// imports\n\n\n// module\nexports.push([module.i, \".chart-container[data-v-269020ec]{position:relative;width:100%;height:80%}\", \"\", {\"version\":3,\"sources\":[\"/Volumes/Work/Code/vue/vue-element-admin/src/views/charts/line.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACf\",\"file\":\"line.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-269020ec]{\\n    position: relative;\\n    width: 100%;\\n    height: 80%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 668:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(610);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(285)(\"14b02f70\", content, true);\n\n/***/ }),\n\n/***/ 713:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(1)(\n  /* script */\n  __webpack_require__(545),\n  /* template */\n  __webpack_require__(767),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 735:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_vm._v(\"\\n  https://github.com/ecomfe/echarts/blob/master/index.js\\n  http://echarts.baidu.com/tutorial.html\\n  \"), _c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('lineMarker', {\n    attrs: {\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n/***/ }),\n\n/***/ 767:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// js/4.ff500297eba83d0e81ed.js","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-269020ec\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./line.vue\")\n}\nvar Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./line.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-269020ec\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./line.vue\"),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-269020ec\",\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/charts/line.vue\n// module id = 289\n// module chunks = 4","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuiltInObject(sourceProp)\n                    && !isBuiltInObject(targetProp)\n                    && !isPrimitive(sourceProp)\n                    && !isPrimitive(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * Consider typed array.\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuiltInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * Whether is exactly NaN. Notice isNaN('a') returns true.\n     * @param {*} value\n     * @return {boolean}\n     */\n    function eqNaN(value) {\n        return value !== value;\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var primitiveKey = '__ec_primitive__';\n    /**\n     * Set an object as primitive to be ignored traversing children in clone or merge\n     */\n    function setAsPrimitive(obj) {\n        obj[primitiveKey] = true;\n    }\n\n    function isPrimitive(obj) {\n        return obj[primitiveKey];\n    }\n\n    /**\n     * @constructor\n     */\n    function HashMap(obj) {\n        obj && extend(this, obj);\n    }\n\n    // Add prefix to avoid conflict with Object.prototype.\n    var HASH_MAP_PREFIX = '_ec_';\n    var HASH_MAP_PREFIX_LENGTH = 4;\n\n    HashMap.prototype = {\n        constructor: HashMap,\n        // Do not provide `has` method to avoid defining what is `has`.\n        // (We usually treat `null` and `undefined` as the same, different\n        // from ES6 Map).\n        get: function (key) {\n            return this[HASH_MAP_PREFIX + key];\n        },\n        set: function (key, value) {\n            this[HASH_MAP_PREFIX + key] = value;\n            // Comparing with invocation chaining, `return value` is more commonly\n            // used in this case: `var someVal = map.set('a', genVal());`\n            return value;\n        },\n        // Although util.each can be performed on this hashMap directly, user\n        // should not use the exposed keys, who are prefixed.\n        each: function (cb, context) {\n            context !== void 0 && (cb = bind(cb, context));\n            for (var prefixedKey in this) {\n                this.hasOwnProperty(prefixedKey)\n                    && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n            }\n        },\n        // Do not use this method if performance sensitive.\n        removeKey: function (key) {\n            delete this[key];\n        }\n    };\n\n    function createHashMap() {\n        return new HashMap();\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuiltInObject: isBuiltInObject,\n        isDom: isDom,\n        eqNaN: eqNaN,\n        retrieve: retrieve,\n        assert: assert,\n        setAsPrimitive: setAsPrimitive,\n        createHashMap: createHashMap,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 315\n// module chunks = 0 1 2 3 4","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            var view = ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId];\n            if (view && view.__alive) {\n                view[method](model, ecModel, ecIns._api, payload);\n            }\n        }, ecIns);\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.4.0',\n        dependencies: {\n            zrender: '3.3.0'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 316\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 317\n// module chunks = 0 1 2 3 4","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 318\n// module chunks = 0 1 2 3 4","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 319\n// module chunks = 0 1 2 3 4","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    var pathProxyForDraw = new PathProxy(true);\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = null;\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path || pathProxyForDraw;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect;\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    rect = rect || this.getBoundingRect();\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath\n                || (lineDash && !ctxLineDash && hasStroke)\n            ) {\n                path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                if (this.path) {\n                    this.__dirtyPath = false;\n                }\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        createPathProxy: function () {\n            this.path = new PathProxy();\n        },\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (!path) {\n                    // Create path on demand.\n                    path = this.path = new PathProxy();\n                }\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 320\n// module chunks = 0 1 2 3 4","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n                // events currently. So we dont use that on other browsers unless tested sufficiently.\n                // Although IE 10 supports pointer event, it use old style and is different from the\n                // standard. So we exclude that. (IE 10 is hardly used on touch device)\n                && (browser.edge || (browser.ie && browser.version >= 11))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 321\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 322\n// module chunks = 0 1 2 3 4","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 323\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 324\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 325\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 326\n// module chunks = 0 1 2 3 4","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 327\n// module chunks = 0 1 2 3 4","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 328\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 329\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/tool/color\n */\n\n\n    var LRU = require('../core/LRU');\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    function setRgba(out, r, g, b, a) {\n        out[0] = r; out[1] = g; out[2] = b; out[3] = a;\n        return out;\n    }\n    function copyRgba(out, a) {\n        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];\n        return out;\n    }\n    var colorCache = new LRU(20);\n    var lastRemovedArr = null;\n    function putToCache(colorStr, rgbaArr) {\n        // Reuse removed array\n        if (lastRemovedArr) {\n            copyRgba(lastRemovedArr, rgbaArr);\n        }\n        lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || (rgbaArr.slice()));\n    }\n    /**\n     * @param {string} colorStr\n     * @param {Array.<number>} out\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr, rgbaArr) {\n        if (!colorStr) {\n            return;\n        }\n        rgbaArr = rgbaArr || [];\n\n        var cached = colorCache.get(colorStr);\n        if (cached) {\n            return copyRgba(rgbaArr, cached);\n        }\n\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            copyRgba(rgbaArr, kCSSColorTable[str]);\n            putToCache(colorStr, rgbaArr);\n            return rgbaArr;\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    setRgba(rgbaArr, 0, 0, 0, 1);\n                    return;  // Covers NaN.\n                }\n                setRgba(rgbaArr,\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                );\n                putToCache(colorStr, rgbaArr);\n                return rgbaArr;\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    setRgba(rgbaArr,\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    );\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsla':\n                    if (params.length !== 4) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                case 'hsl':\n                    if (params.length !== 3) {\n                        setRgba(rgbaArr, 0, 0, 0, 1);\n                        return;\n                    }\n                    hsla2rgba(params, rgbaArr);\n                    putToCache(colorStr, rgbaArr);\n                    return rgbaArr;\n                default:\n                    return;\n            }\n        }\n\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla, rgba) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        rgba = rgba || [];\n        setRgba(rgba,\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255),\n            1\n        );\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array.\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>} will be null/undefined if input illegal.\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        out = out || [];\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssFloat(lerp(leftColor[3], rightColor[3], dv));\n\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<number>} arrColor like [12,33,44,0.4]\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color. (If input illegal, return undefined).\n     */\n    function stringify(arrColor, type) {\n        if (!arrColor || !arrColor.length) {\n            return;\n        }\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 330\n// module chunks = 0 1 2 3 4","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 331\n// module chunks = 0 1 2 3 4","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var lineHeight = textRect.lineHeight;\n        var halfHeight = height / 2 - textHeight / 2 + lineHeight;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight - lineHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance + lineHeight;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance + lineHeight;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance + lineHeight;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance + lineHeight;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'alphabetic'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 332\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * preventDefault and stopPropagation.\n     * Notice: do not do that in zrender. Upper application\n     * do that if necessary.\n     *\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 333\n// module chunks = 0 1 2 3 4","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 334\n// module chunks = 0 1 2 3 4","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 335\n// module chunks = 0 1 2 3 4","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToStorage(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromStorage(child);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromStorage(child);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToStorage(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromStorage(child);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 336\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    // var CMD_MEM_SIZE = {\n    //     M: 3,\n    //     L: 3,\n    //     C: 7,\n    //     Q: 5,\n    //     A: 9,\n    //     R: 5,\n    //     Z: 1\n    // };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function (notSaveData) {\n\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            /**\n             * Path data. Stored as flat array\n             * @type {Array.<Object>}\n             */\n            this.data = [];\n        }\n\n        this._ctx = null;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _xi: 0,\n        _yi: 0,\n\n        _x0: 0,\n        _y0: 0,\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        _ux: 0,\n        _uy: 0,\n\n        _len: 0,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            if (this._saveData) {\n                this._len = 0;\n            }\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._yi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            if (!this._saveData) {\n                return;\n            }\n\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 337\n// module chunks = 0 1 2 3 4","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 338\n// module chunks = 0 1 2 3 4","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 339\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 340\n// module chunks = 0 1 2 3 4","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        axis.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 341\n// module chunks = 0 1 2 3 4","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 342\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 343\n// module chunks = 0 1 2 3 4","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 344\n// module chunks = 0 1 2 3 4","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 345\n// module chunks = 0 1 2 3 4","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 346\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', this.getInitialData(option, ecModel));\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 347\n// module chunks = 0 1 2 3 4","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 349\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function getSymbolSize(data, idx) {\n        var symbolSize = data.getItemVisual(idx, 'symbolSize');\n        return symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n    }\n\n    function getScale(symbolSize) {\n        return [symbolSize[0] / 2, symbolSize[1] / 2];\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx, symbolSize) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        graphic.initProps(symbolPath, {\n            scale: getScale(symbolSize)\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = getSymbolSize(data, idx);\n\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx, symbolSize);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: getScale(symbolSize)\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        var scale = getScale(symbolSize);\n\n        if (hoverAnimation && seriesModel.isAnimationEnabled()) {\n            var onEmphasis = function() {\n                var ratio = scale[1] / scale[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(scale[0] * 1.1, scale[0] + 3),\n                        Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: scale\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 350\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         * @return {module:echarts/model/Component}\n         */\n        getCoordSysModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.option.gridIndex,\n                id: this.option.gridId\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 351\n// module chunks = 0 1 2 3 4","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 352\n// module chunks = 0 1 2 3 4","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 353\n// module chunks = 0 1 2 3 4","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 354\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 355\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        pause: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].pause();\n            }\n            this._paused = true;\n        },\n\n        resume: function () {\n            for (var i = 0; i < this._clipList.length; i++) {\n                this._clipList[i].resume();\n            }\n            this._paused = false;\n        },\n\n        isPaused: function () {\n            return !!this._paused;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 356\n// module chunks = 0 1 2 3 4","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 357\n// module chunks = 0 1 2 3 4","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 358\n// module chunks = 0 1 2 3 4","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function () {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function (val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function (entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            entry.next = null;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function (entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function () {\n        return this._len;\n    };\n\n    /**\n     * Clear list\n     */\n    linkedListProto.clear = function () {\n        this.head = this.tail = null;\n        this._len = 0;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function (val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function (maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n\n        this._lastRemovedEntry = null;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     * @return {} Removed value\n     */\n    LRUProto.put = function (key, value) {\n        var list = this._list;\n        var map = this._map;\n        var removed = null;\n        if (map[key] == null) {\n            var len = list.len();\n            // Reuse last removed entry\n            var entry = this._lastRemovedEntry;\n\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n\n                removed = leastUsedEntry.value;\n                this._lastRemovedEntry = leastUsedEntry;\n            }\n\n            if (entry) {\n                entry.value = value;\n            }\n            else {\n                entry = new Entry(value);\n            }\n            entry.key = key;\n            list.insertEntry(entry);\n            map[key] = entry;\n        }\n\n        return removed;\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function (key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function () {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 359\n// module chunks = 0 1 2 3 4","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 360\n// module chunks = 0 1 2 3 4","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 361\n// module chunks = 0 1 2 3 4","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n                var width = style.width;\n                var height = style.height;\n                var aspect = image.width / image.height;\n                if (width == null && height != null) {\n                    // Keep image/height ratio\n                    width = height * aspect;\n                }\n                else if (height == null && width != null) {\n                    height = width / aspect;\n                }\n                else if (width == null && height == null) {\n                    width = image.width;\n                    height = image.height;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 362\n// module chunks = 0 1 2 3 4","\n\n    var Pattern = function (image, repeat) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {image: ...}`, where this constructor will not be called.\n\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n        return ctx.createPattern(this.image, this.repeat || 'repeat');\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 363\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        var x = obj.x == null ? 0 : obj.x;\n        var x2 = obj.x2 == null ? 1 : obj.x2;\n        var y = obj.y == null ? 0 : obj.y;\n        var y2 = obj.y2 == null ? 0 : obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x == null ? 0.5 : obj.x;\n        var y = obj.y == null ? 0.5 : obj.y;\n        var r = obj.r == null ? 0.5 : obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * [x, y]\n         * @type {Array.<number>}\n         */\n        textOffset: null,\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 364\n// module chunks = 0 1 2 3 4","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 365\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 366\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 367\n// module chunks = 0 1 2 3 4","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.getCoordSysModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtentFromData(data, dim);\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.getCoordSysModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.getCoordSysModel() !== yAxisModel.getCoordSysModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 368\n// module chunks = 0 1 2 3 4","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 369\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'linear', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 371\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 373\n// module chunks = 0 1 2 3 4","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 374\n// module chunks = 0 1 2 3 4","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 375\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 376\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 377\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 378\n// module chunks = 0 1 2 3 4","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 379\n// module chunks = 0 1 2 3 4","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 380\n// module chunks = 0 1 2 3 4","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 381\n// module chunks = 0 1 2 3 4","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 382\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n\n            // If min or max are user set, we need to check\n            // If the tick on min(max) are overlap on their neighbour tick\n            // If they are overlapped, we need to hide the min(max) tick label\n            if (axisModel.getMin() != null) {\n                var firstLabel = textEls[0];\n                var nextLabel = textEls[1];\n                if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                    firstLabel.ignore = true;\n                }\n            }\n            if (axisModel.getMax() != null) {\n                var lastLabel = textEls[textEls.length - 1];\n                var prevLabel = textEls[textEls.length - 2];\n                if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                    lastLabel.ignore = true;\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 383\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.getCoordSysModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            if (axis.isBlank()) {\n                return;\n            }\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 384\n// module chunks = 0 1 2 3 4","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 385\n// module chunks = 0 1 2 3 4","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 386\n// module chunks = 0 1 2 3 4","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            // From self\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = payload.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, payload);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (payload.x == null || payload.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: payload.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(payload.x, payload.y);\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var data = dataModel.getData();\n                var itemModel = data.getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: dataIndex,\n                    dataIndex: data.getRawIndex(dataIndex), // expose to user.\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                if (baseAxis.isBlank() || zrUtil.eqNaN(point[0]) || zrUtil.eqNaN(point[1])) {\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = ({x: 1, radius: 1, single: 1})[baseAxis.dim] ? 0 : 1;\n\n            if (!seriesList.length) {\n                return;\n            }\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            var dataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                // expose to user.\n                dataIndex: seriesList[sampleSeriesIndex].getData().getRawIndex(dataIndex),\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params, true);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 387\n// module chunks = 0 1 2 3 4","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        isBlank: function () {\n            return this._isBlank;\n        },\n\n        /**\n         * When axis extent depends on data and no data exists,\n         * axis ticks should not be drawn, which is named 'blank'.\n         */\n        setBlank: function (isBlank) {\n            this._isBlank = isBlank;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 388\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 389\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 390\n// module chunks = 0 1 2 3 4","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 391\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 392\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 393\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 394\n// module chunks = 0 1 2 3 4","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 395\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 396\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 397\n// module chunks = 0 1 2 3 4","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} [defaultNames]    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [extraPrefix]             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 398\n// module chunks = 0 1 2 3 4","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 399\n// module chunks = 0 1 2 3 4","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 400\n// module chunks = 0 1 2 3 4","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 401\n// module chunks = 0 1 2 3 4","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 402\n// module chunks = 0 1 2 3 4","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 403\n// module chunks = 0 1 2 3 4","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 404\n// module chunks = 0 1 2 3 4","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 405\n// module chunks = 0 1 2 3 4","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 406\n// module chunks = 0 1 2 3 4","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 407\n// module chunks = 0 1 2 3 4","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 408\n// module chunks = 0 1 2 3 4","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 409\n// module chunks = 0 1 2 3 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 410\n// module chunks = 0 1 2 3 4","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 411\n// module chunks = 0 1 2 3 4","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 412\n// module chunks = 0 1 2 3 4","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 413\n// module chunks = 0 1 2 3 4","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 414\n// module chunks = 0 1 2 3 4","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 415\n// module chunks = 0 1 2 3 4","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 416\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    var SILENT = 'silent';\n\n    function makeEventPacket(eveType, targetInfo, event) {\n        return {\n            type: eveType,\n            event: event,\n            // target can only be an element that is not silent.\n            target: targetInfo.target,\n            // topTarget can be a silent element.\n            topTarget: targetInfo.topTarget,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * {target, topTarget}\n         * @private\n         * @type {Object}\n         */\n        this._hovered = {};\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var lastHovered = this._hovered;\n            var hovered = this._hovered = this.findHover(x, y);\n            var hoveredTarget = hovered.target;\n            var lastHoveredTarget = lastHovered.target;\n\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget && lastHoveredTarget.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = {};\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetInfo {target, topTarget} 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetInfo, eventName, event) {\n            targetInfo = targetInfo || {};\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n            var el = targetInfo.target;\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @return {model:zrender/Element}\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            var out = {};\n\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                var hoverCheckResult;\n                if (list[i] !== exclude\n                    // getDisplayList may include ignored item in VML mode\n                    && !list[i].ignore\n                    && (hoverCheckResult = isHover(list[i], x, y))\n                ) {\n                    !out.topTarget && (out.topTarget = list[i]);\n                    if (hoverCheckResult !== SILENT) {\n                        out.target = list[i];\n                        break;\n                    }\n                }\n            }\n\n            return out;\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY);\n            var hoveredTarget = hovered.target;\n\n            if (name === 'mousedown') {\n                this._downel = hoveredTarget;\n                // In case click triggered before mouseup\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hoveredTarget;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            var isSilent;\n            while (el) {\n                // If clipped by ancestor.\n                if (el.clipPath && !el.clipPath.contain(x, y))  {\n                    return false;\n                }\n                if (el.silent) {\n                    isSilent = true;\n                }\n                el = el.parent;\n            }\n            return isSilent ? SILENT : true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 417\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 418\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.__builtin__) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n\n            clipPath.setTransform(ctx);\n            ctx.beginPath();\n            clipPath.buildPath(ctx, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            if (opts.width != null) {\n                root.width = opts.width;\n            }\n            if (opts.height != null) {\n                root.height = opts.height;\n            }\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n\n            this._domRoot = root;\n        }\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.__builtin__ && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuiltinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuiltinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.__builtin__) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.__builtin__ = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            layersMap[zlevel] = layer;\n\n            // Vitual layer will not directly show on the screen.\n            // (It can be a WebGL layer and assigned to a ZImage element)\n            // But it still under management of zrender.\n            if (!layer.virtual) {\n                if (prevLayer) {\n                    var prevDom = prevLayer.dom;\n                    if (prevDom.nextSibling) {\n                        domRoot.insertBefore(\n                            layer.dom,\n                            prevDom.nextSibling\n                        );\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n                else {\n                    if (domRoot.firstChild) {\n                        domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                    }\n                    else {\n                        domRoot.appendChild(layer.dom);\n                    }\n                }\n            }\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuiltinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (!layer.__builtin__) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuiltinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuiltinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuiltinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        pathToImage: function (path, dpr) {\n            dpr = dpr || this.dpr;\n\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n            var rect = path.getBoundingRect();\n            var style = path.style;\n            var shadowBlurSize = style.shadowBlur;\n            var shadowOffsetX = style.shadowOffsetX;\n            var shadowOffsetY = style.shadowOffsetY;\n            var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n\n            var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n            var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n            var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n            var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n            var width = rect.width + leftMargin + rightMargin;\n            var height = rect.height + topMargin + bottomMargin;\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.scale(dpr, dpr);\n            ctx.clearRect(0, 0, width, height);\n            ctx.dpr = dpr;\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [leftMargin - rect.x, topMargin - rect.y];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            path.updateTransform();\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 419\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var userSetClipPath = el.clipPath;\n            if (userSetClipPath) {\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                }\n                else {\n                    clipPaths = [];\n                }\n\n                var currentClipPath = userSetClipPath;\n                var parentClipPath = el;\n                // Recursively add clip path\n                while (currentClipPath) {\n                    // clipPath 的变换是基于使用这个 clipPath 的元素\n                    currentClipPath.parent = parentClipPath;\n                    currentClipPath.updateTransform();\n\n                    clipPaths.push(currentClipPath);\n\n                    parentClipPath = currentClipPath;\n                    currentClipPath = currentClipPath.clipPath;\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            if (el.__storage === this) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToStorage(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n         */\n        delRoot: function (el) {\n            if (el == null) {\n                // 不指定el清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (el instanceof Array) {\n                for (var i = 0, l = el.length; i < l; i++) {\n                    this.delRoot(el[i]);\n                }\n                return;\n            }\n\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromStorage(el);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToStorage: function (el) {\n            el.__storage = this;\n            el.dirty(false);\n\n            return this;\n        },\n\n        delFromStorage: function (el) {\n            if (el) {\n                el.__storage = null;\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 420\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time, delta);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            this.addAnimator(animator);\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 421\n// module chunks = 0 1 2 3 4","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n\n        this._pausedTime = 0;\n        this._paused = false;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime, deltaTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            if (this._paused) {\n                this._pausedTime += deltaTime;\n                return;\n            }\n\n            var percent = (globalTime - this._startTime - this._pausedTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n            this._pausedTime = 0;\n\n            this._needsRemove = false;\n        },\n\n        fire: function (eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        },\n\n        pause: function () {\n            this._paused = true;\n        },\n\n        resume: function () {\n            this._paused = false;\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 422\n// module chunks = 0 1 2 3 4","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 423\n// module chunks = 0 1 2 3 4","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 424\n// module chunks = 0 1 2 3 4","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 425\n// module chunks = 0 1 2 3 4","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 426\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 427\n// module chunks = 0 1 2 3 4","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 428\n// module chunks = 0 1 2 3 4","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 429\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 430\n// module chunks = 0 1 2 3 4","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 431\n// module chunks = 0 1 2 3 4","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    var pointerEventNames = {\n        pointerdown: 1, pointerup: 1, pointermove: 1, pointerout: 1\n    };\n\n    var pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n        var nm = name.replace('mouse', 'pointer');\n        return pointerEventNames[nm] ? nm : name;\n    });\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null).target,\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        // Do not do any preventDefault here. Upper application do that if necessary.\n        if (gestureInfo) {\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement({target: gestureInfo.target}, type, gestureInfo.event);\n        }\n    }\n\n    // function onMSGestureChange(proxy, event) {\n    //     if (event.translationX || event.translationY) {\n    //         // mousemove is carried by MSGesture to reduce the sensitivity.\n    //         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n    //     }\n    //     if (event.scale !== 1) {\n    //         event.pinchX = event.offsetX;\n    //         event.pinchY = event.offsetY;\n    //         event.pinchScale = event.scale;\n    //         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n    //     }\n    // }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered, and must before `mousedown` triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        },\n\n        pointerdown: function (event) {\n            domHandlers.mousedown.call(this, event);\n\n            // if (useMSGuesture(this, event)) {\n            //     this._msGesture.addPointer(event.pointerId);\n            // }\n        },\n\n        pointermove: function (event) {\n            // FIXME\n            // pointermove is so sensitive that it always triggered when\n            // tap(click) on touch screen, which affect some judgement in\n            // upper application. So, we dont support mousemove on MS touch\n            // device yet.\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mousemove.call(this, event);\n            }\n        },\n\n        pointerup: function (event) {\n            domHandlers.mouseup.call(this, event);\n        },\n\n        pointerout: function (event) {\n            // pointerout will be triggered when tap on touch screen\n            // (IE11+/Edge on MS Surface) after click event triggered,\n            // which is inconsistent with the mousout behavior we defined\n            // in touchend. So we unify them.\n            // (check domHandlers.touchend for detailed explanation)\n            if (!isPointerFromTouch(event)) {\n                domHandlers.mouseout.call(this, event);\n            }\n        }\n    };\n\n    function isPointerFromTouch(event) {\n        var pointerType = event.pointerType;\n        return pointerType === 'pen' || pointerType === 'touch';\n    }\n\n    // function useMSGuesture(handlerProxy, event) {\n    //     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n    // }\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        zrUtil.each(touchHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(pointerHandlerNames, function (name) {\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        });\n\n        zrUtil.each(mouseHandlerNames, function (name) {\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        });\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (env.pointerEventsSupported) { // Only IE11+/Edge\n            // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n            // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n            // at the same time.\n            // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n            // screen, which do not occurs in pointer event.\n            // So we use pointer event to both detect touch gesture and mouse behavior.\n            mountHandlers(pointerHandlerNames, this);\n\n            // FIXME\n            // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n            // which does not prevent defuault behavior occasionally (which may cause view port\n            // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n            // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n            // touch screen. And we only support click behavior on MS touch screen now.\n\n            // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n            // We dont support touch on IE on win7.\n            // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n            // if (typeof MSGesture === 'function') {\n            //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n            //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n            // }\n        }\n        else {\n            if (env.touchEventsSupported) {\n                mountHandlers(touchHandlerNames, this);\n                // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n                // addEventListener(root, 'mouseout', this._mouseoutHandler);\n            }\n\n            // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n            // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n            // mouse event can not be handle in those devices.\n            // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n            // mouseevent after touch event triggered, see `setTouchTimer`.\n            mountHandlers(mouseHandlerNames, this);\n        }\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 432\n// module chunks = 0 1 2 3 4","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                if (!paths[i].path) {\n                    paths[i].createPathProxy();\n                }\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 433\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        // Should do nothing more in this constructor. Because gradient can be\n        // declard by `color: {type: 'radial', colorStops: ...}`, where\n        // this constructor will not be called.\n\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 434\n// module chunks = 0 1 2 3 4","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                // FIXME in text contain default is top\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (!this._rect) {\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                if (style.hasStroke()) {\n                    var w = style.lineWidth;\n                    rect.x -= w / 2;\n                    rect.y -= w / 2;\n                    rect.width += w;\n                    rect.height += w;\n                }\n                this._rect = rect;\n            }\n\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 435\n// module chunks = 0 1 2 3 4","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 436\n// module chunks = 0 1 2 3 4","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 437\n// module chunks = 0 1 2 3 4","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 438\n// module chunks = 0 1 2 3 4","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var textOffset = style.textOffset;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            if (textOffset) {\n                x += textOffset[0];\n                y += textOffset[1];\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                    // Fill after stroke so the outline will not cover the main part.\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                textFill && ctx.fillText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 439\n// module chunks = 0 1 2 3 4","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 440\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 441\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // else {\n            //     if (ctx.allocate && !ctx.data.length) {\n            //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n            //     }\n            // }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 442\n// module chunks = 0 1 2 3 4","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 443\n// module chunks = 0 1 2 3 4","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 444\n// module chunks = 0 1 2 3 4","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 445\n// module chunks = 0 1 2 3 4","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 446\n// module chunks = 0 1 2 3 4","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 447\n// module chunks = 0 1 2 3 4","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    var env = require('../../core/env');\n    var Path = require('../Path');\n\n    var shadowTemp = [\n        ['shadowBlur', 0],\n        ['shadowColor', '#000'],\n        ['shadowOffsetX', 0],\n        ['shadowOffsetY', 0]\n    ];\n\n    module.exports = Path.extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        brush: (env.browser.ie && env.browser.version >= 11) // version: '11.0'\n            // Fix weird bug in some version of IE11 (like 11.0.9600.17801),\n            // where exception \"unexpected call to method or property access\"\n            // might be thrown when calling ctx.fill after a path whose area size\n            // is zero is drawn and ctx.clip() is called and shadowBlur is set.\n            // (e.g.,\n            //  ctx.moveTo(10, 10);\n            //  ctx.lineTo(20, 10);\n            //  ctx.closePath();\n            //  ctx.clip();\n            //  ctx.shadowBlur = 10;\n            //  ...\n            //  ctx.fill();\n            // )\n            ? function () {\n                var clipPaths = this.__clipPaths;\n                var style = this.style;\n                var modified;\n\n                if (clipPaths) {\n                    for (var i = 0; i < clipPaths.length; i++) {\n                        var shape = clipPaths[i] && clipPaths[i].shape;\n                        if (shape && shape.startAngle === shape.endAngle) {\n                            for (var j = 0; j < shadowTemp.length; j++) {\n                                shadowTemp[j][2] = style[shadowTemp[j][0]];\n                                style[shadowTemp[j][0]] = shadowTemp[j][1];\n                            }\n                            modified = true;\n                            break;\n                        }\n                    }\n                }\n\n                Path.prototype.brush.apply(this, arguments);\n\n                if (modified) {\n                    for (var j = 0; j < shadowTemp.length; j++) {\n                        style[shadowTemp[j][0]] = shadowTemp[j][2];\n                    }\n                }\n            }\n            : Path.prototype.brush,\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 448\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 449\n// module chunks = 0 1 2 3 4","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget).target;\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    function param(target, e) {\n        return {target: target, topTarget: e && e.topTarget};\n    }\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 450\n// module chunks = 0 1 2 3 4","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        return Transformable.getLocalTransform(this, m);\n    };\n\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    };\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    /**\n     * @static\n     * @param {Object} target\n     * @param {Array.<number>} target.origin\n     * @param {number} target.rotation\n     * @param {Array.<number>} target.position\n     * @param {Array.<number>} [m]\n     */\n    Transformable.getLocalTransform = function (target, m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = target.origin;\n        var scale = target.scale || [1, 1];\n        var rotation = target.rotation || 0;\n        var position = target.position || [0, 0];\n\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 451\n// module chunks = 0 1 2 3 4","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            if (path.setData) {\n                path.setData(pathProxy.data);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            }\n            else {\n                var ctx = path;\n                pathProxy.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            transformPath(pathProxy, m);\n\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (!pathEl.path) {\n                    pathEl.createPathProxy();\n                }\n                if (pathEl.__dirtyPath) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            // Need path proxy.\n            pathBundle.createPathProxy();\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 452\n// module chunks = 0 1 2 3 4","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i] *= sx;\n                    data[i++] += x;\n                    // cy\n                    data[i] *= sy;\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 453\n// module chunks = 0 1 2 3 4","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.4.4';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        // TODO WebGL\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromStorage = storage.delFromStorage;\n        var oldAddToStorage = storage.addToStorage;\n\n        storage.delFromStorage = function (el) {\n            oldDelFromStorage.call(storage, el);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToStorage = function (el) {\n            oldAddToStorage.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, dpr) {\n            return this.painter.pathToImage(e, dpr);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Find hovered element\n         * @param {number} x\n         * @param {number} y\n         * @return {Object} {target, topTarget}\n         */\n        findHover: function (x, y) {\n            return this.handler.findHover(x, y);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 454\n// module chunks = 0 1 2 3 4","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 462\n// module chunks = 1 2 3 4","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 499\n// module chunks = 1 4","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 500\n// module chunks = 1 4","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 501\n// module chunks = 1 4","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 502\n// module chunks = 1 4","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 503\n// module chunks = 1 4","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 504\n// module chunks = 1 4","<template>\n    <div :class=\"className\" :id=\"id\" :style=\"{height:height,width:width}\"></div>\n</template>\n<script>\n    // 引入 ECharts 主模块\n    const echarts = require('echarts/lib/echarts');\n\n    require('echarts/lib/chart/line');\n    // 引入提示框和标题组件\n    require('echarts/lib/component/tooltip');\n    require('echarts/lib/component/title');\n    require('echarts/lib/component/legend');\n    export default {\n      name: 'barPercent',\n      props: {\n        className: {\n          type: String,\n          default: 'chart'\n        },\n        id: {\n          type: String,\n          default: 'chart'\n        },\n        width: {\n          type: String,\n          default: '200px'\n        },\n        height: {\n          type: String,\n          default: '200px'\n        }\n      },\n      data() {\n        return {};\n      },\n      mounted() {\n        this.initChart();\n      },\n      methods: {\n        initChart() {\n          this.chart = echarts.init(document.getElementById(this.id));\n\n          this.chart.setOption({\n            backgroundColor: '#394056',\n            title: {\n              text: '请求数',\n              textStyle: {\n                fontWeight: 'normal',\n                fontSize: 16,\n                color: '#F1F1F3'\n              },\n              left: '6%'\n            },\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                lineStyle: {\n                  color: '#57617B'\n                }\n              }\n            },\n            legend: {\n              icon: 'rect',\n              itemWidth: 14,\n              itemHeight: 5,\n              itemGap: 13,\n              data: ['移动', '电信', '联通'],\n              right: '4%',\n              textStyle: {\n                fontSize: 12,\n                color: '#F1F1F3'\n              }\n            },\n            grid: {\n              left: '3%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: [{\n              type: 'category',\n              boundaryGap: false,\n              axisLine: {\n                lineStyle: {\n                  color: '#57617B'\n                }\n              },\n              data: ['13:00', '13:05', '13:10', '13:15', '13:20', '13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55']\n            }],\n            yAxis: [{\n              type: 'value',\n              name: '单位（%）',\n              axisTick: {\n                show: false\n              },\n              axisLine: {\n                lineStyle: {\n                  color: '#57617B'\n                }\n              },\n              axisLabel: {\n                margin: 10,\n                textStyle: {\n                  fontSize: 14\n                }\n              },\n              splitLine: {\n                lineStyle: {\n                  color: '#57617B'\n                }\n              }\n            }],\n            series: [{\n              name: '移动',\n              type: 'line',\n              smooth: true,\n              symbol: 'circle',\n              symbolSize: 5,\n              showSymbol: false,\n              lineStyle: {\n                normal: {\n                  width: 1\n                }\n              },\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(137, 189, 27, 0.3)'\n                  }, {\n                    offset: 0.8,\n                    color: 'rgba(137, 189, 27, 0)'\n                  }], false),\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\n                  shadowBlur: 10\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: 'rgb(137,189,27)',\n                  borderColor: 'rgba(137,189,2,0.27)',\n                  borderWidth: 12\n\n                }\n              },\n              data: [220, 182, 191, 134, 150, 120, 110, 125, 145, 122, 165, 122]\n            }, {\n              name: '电信',\n              type: 'line',\n              smooth: true,\n              symbol: 'circle',\n              symbolSize: 5,\n              showSymbol: false,\n              lineStyle: {\n                normal: {\n                  width: 1\n                }\n              },\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(0, 136, 212, 0.3)'\n                  }, {\n                    offset: 0.8,\n                    color: 'rgba(0, 136, 212, 0)'\n                  }], false),\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\n                  shadowBlur: 10\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: 'rgb(0,136,212)',\n                  borderColor: 'rgba(0,136,212,0.2)',\n                  borderWidth: 12\n\n                }\n              },\n              data: [120, 110, 125, 145, 122, 165, 122, 220, 182, 191, 134, 150]\n            }, {\n              name: '联通',\n              type: 'line',\n              smooth: true,\n              symbol: 'circle',\n              symbolSize: 5,\n              showSymbol: false,\n              lineStyle: {\n                normal: {\n                  width: 1\n                }\n              },\n              areaStyle: {\n                normal: {\n                  color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: 'rgba(219, 50, 51, 0.3)'\n                  }, {\n                    offset: 0.8,\n                    color: 'rgba(219, 50, 51, 0)'\n                  }], false),\n                  shadowColor: 'rgba(0, 0, 0, 0.1)',\n                  shadowBlur: 10\n                }\n              },\n              itemStyle: {\n                normal: {\n                  color: 'rgb(219,50,51)',\n                  borderColor: 'rgba(219,50,51,0.2)',\n                  borderWidth: 12\n                }\n              },\n              data: [220, 182, 125, 145, 122, 191, 134, 150, 120, 110, 165, 122]\n            }]\n          })\n        }\n      }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// lineMarker.vue?293cfe91","<template>\n  <div class=\"components-container\" style='height:100vh'>\n    https://github.com/ecomfe/echarts/blob/master/index.js\n    http://echarts.baidu.com/tutorial.html\n    <div class='chart-container'>\n       <lineMarker height='100%' width='100%' />\n    </div>\n\n  </div>\n</template>\n<script>\n    import lineMarker from 'components/Charts/lineMarker';\n\n    export default {\n      components: { lineMarker }\n    };\n</script>\n\n<style scoped>\n.chart-container{\n    position: relative;\n    width: 100%;\n    height: 80%;\n}\n</style>\n\n\n\n\n// WEBPACK FOOTER //\n// line.vue?3c4de9f1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".chart-container[data-v-269020ec]{position:relative;width:100%;height:80%}\", \"\", {\"version\":3,\"sources\":[\"/Volumes/Work/Code/vue/vue-element-admin/src/views/charts/line.vue\"],\"names\":[],\"mappings\":\"AACA,kCACI,kBAAmB,AACnB,WAAY,AACZ,UAAY,CACf\",\"file\":\"line.vue\",\"sourcesContent\":[\"\\n.chart-container[data-v-269020ec]{\\n    position: relative;\\n    width: 100%;\\n    height: 80%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-269020ec\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/line.vue\n// module id = 610\n// module chunks = 4","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-269020ec\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./line.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"14b02f70\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-269020ec\",\"scoped\":true,\"hasInlineConfig\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/views/charts/line.vue\n// module id = 668\n// module chunks = 4","var Component = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./lineMarker.vue\"),\n  /* template */\n  require(\"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7b9f93a0\\\"}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./lineMarker.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Charts/lineMarker.vue\n// module id = 713\n// module chunks = 4","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"components-container\",\n    staticStyle: {\n      \"height\": \"100vh\"\n    }\n  }, [_vm._v(\"\\n  https://github.com/ecomfe/echarts/blob/master/index.js\\n  http://echarts.baidu.com/tutorial.html\\n  \"), _c('div', {\n    staticClass: \"chart-container\"\n  }, [_c('lineMarker', {\n    attrs: {\n      \"height\": \"100%\",\n      \"width\": \"100%\"\n    }\n  })], 1)])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-269020ec\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/views/charts/line.vue\n// module id = 735\n// module chunks = 4","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    class: _vm.className,\n    style: ({\n      height: _vm.height,\n      width: _vm.width\n    }),\n    attrs: {\n      \"id\": _vm.id\n    }\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-7b9f93a0\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Charts/lineMarker.vue\n// module id = 767\n// module chunks = 4"],"sourceRoot":""}